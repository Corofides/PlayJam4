---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jameslendrem.
--- DateTime: 10/11/2023 23:45
---

local pd <const> = playdate
local gfx <const> = pd.graphics

class("IsometricSquare").extends(gfx.sprite)

function drawIsometricSquareToContext(startXPos, startYPos, distance, context, show, fill)

    if (show == nil) then
        show = {true, true, true, true}
    end

    if (fill == nil) then
        fill = true;
    end

    gfx.pushContext(context);

    gfx.setColor(gfx.kColorWhite)

    local pointsTable <const> = {
        startXPos + 1, startYPos,
        startXPos + distance + 1, startYPos + (distance / 2) - 1,
        startXPos + (distance * 2), startYPos - 1,
        startXPos + distance, startYPos - (distance / 2) - 1,
        startXPos + 1, startYPos - 1,
    }

    gfx.fillPolygon(table.unpack(pointsTable))

    gfx.setColor(gfx.kColorBlack)

    if (show[1]) then
        gfx.drawLine(startXPos, startYPos, startXPos + distance, startYPos + (distance / 2))
    end

    if (show[2]) then
        gfx.drawLine(startXPos + distance, startYPos + (distance / 2), startXPos + (distance * 2), startYPos);
    end

    if (show[3]) then
        gfx.drawLine(startXPos + distance, startYPos - (distance / 2), startXPos + distance * 2, startYPos)
    end

    if (show[4]) then
        gfx.drawLine(startXPos, startYPos, startXPos + distance, startYPos - (distance / 2))
    end



    gfx.popContext()

end

function IsometricSquare:init(x, y)

    local startXPos = 0
    local startYPos = 8
    local distance = 16

    self:moveTo(x, y);
    local isoCubeImage = gfx.image.new(32, 64);
    drawIsometricSquareToContext(startXPos, startYPos, distance, isoCubeImage);
    self:setImage(isoCubeImage)
    self:add();

end